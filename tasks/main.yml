---

- name: Install Buildbot CI
  apt: name=buildbot state=present
  sudo: true

- name: Ensure directory for Buildbot is there
  file:
    dest: "{{ buildbot_path }}"
    state: directory
  sudo: yes
  sudo_user: "{{ buildbot_user }}"

- name: Create master
  command: buildbot create-master {{ master_name }}
    chdir="{{ buildbot_path }}"
    creates="{{ buildbot_path }}/{{ master_name }}"
  when: master_name is defined
  register: master_creation
  sudo: yes
  sudo_user: "{{ buildbot_user }}"

- name: Configure master
  template:
    src=master.cfg
    dest={{ buildbot_path }}/{{ master_name }}/master.cfg
    owner={{ user }}
  when: master_creation|success
  register: master_config
  sudo: yes
  sudo_user: "{{ buildbot_user }}"


- name: Master | Verify if a configuration for buildbot master exists.
  local_action: stat path="{{ inventory_dir }}/host_files/{{ inventory_hostname }}/{{ master_config_file }}"
  register: p

- name: Master | Add master config file
  copy:
    src={{ inventory_dir }}/host_files/{{ inventory_hostname }}/{{ master_config_file }}
    dest={{ buildbot_path }}/{{ master_name }}/master.cfg
    owner={{ buildbot_user }}
  when: p.stat.exists
  sudo: yes
  sudo_user: "{{ buildbot_user }}"

- name: Start master
  command: buildbot restart {{ master_name }}
    chdir="{{ buildbot_path }}"
  when: master_config|success
  sudo: yes
  sudo_user: "{{ buildbot_user }}"

- name: Create slave
  command: buildslave create-slave {{ slave_name }} {{ master_host }}:{{ master_port }} {{ slave_username }} {{ slave_pass }}
    chdir="{{ buildbot_path }}"
    creates="{{ buildbot_path }}/{{ slave_name }}"
  when: slave_name is defined
  register: slave_creation
  sudo: yes
  sudo_user: "{{ buildbot_user }}"

- name: Start slave
  command: buildslave restart slave
    chdir="{{ buildbot_path }}"
  when: slave_creation|success
  sudo: yes
  sudo_user: "{{ buildbot_user }}"
